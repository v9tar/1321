-- Roblox Fruit Trading Controller v2.0
-- Compatible with Delta, Flex, Hydrogen, and other versions

local Player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")

-- GUI Creation
local GUI = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local TargetBox = Instance.new("TextBox")
local ControlBtn = Instance.new("TextButton")
local JumpToggle = Instance.new("TextButton")
local AcceptToggle = Instance.new("TextButton")

-- GUI Configuration
GUI.Name = "TradeController"
GUI.Parent = game.CoreGui
GUI.ResetOnSpawn = false

MainFrame.Name = "MainFrame"
MainFrame.Parent = GUI
MainFrame.Size = UDim2.new(0, 250, 0, 200)
MainFrame.Position = UDim2.new(0.5, -125, 0.5, -100)
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.BackgroundTransparency = 0.3

Title.Text = "Fruit Trade Controller v2.0"
Title.Parent = MainFrame
Title.Size = UDim2.new(1, 0, 0, 25)

TargetBox.PlaceholderText = "Player Name"
TargetBox.Parent = MainFrame
TargetBox.Position = UDim2.new(0.1, 0, 0.2, 0)
TargetBox.Size = UDim2.new(0.8, 0, 0, 25)

ControlBtn.Text = "Start Control"
ControlBtn.Parent = MainFrame
ControlBtn.Position = UDim2.new(0.1, 0, 0.4, 0)
ControlBtn.Size = UDim2.new(0.8, 0, 0, 30)

JumpToggle.Text = "Disable Jump"
JumpToggle.Parent = MainFrame
JumpToggle.Position = UDim2.new(0.1, 0, 0.55, 0)
JumpToggle.Size = UDim2.new(0.35, 0, 0, 30)

AcceptToggle.Text = "Force Accept"
AcceptToggle.Parent = MainFrame
AcceptToggle.Position = UDim2.new(0.55, 0, 0.55, 0)
AcceptToggle.Size = UDim2.new(0.35, 0, 0, 30)

-- Control System
local ControlledPlayer = nil
local OriginalSettings = {}

local function FindPlayer(name)
    for _, player in pairs(game:GetService("Players"):GetPlayers()) do
        if player.Name:lower():find(name:lower()) then
            return player
        end
    end
    return nil
end

local function ControlCharacter(char)
    if char and char:FindFirstChild("Humanoid") then
        OriginalSettings.WalkSpeed = char.Humanoid.WalkSpeed
        OriginalSettings.JumpPower = char.Humanoid.JumpPower
    end
end

local function ToggleJump(state)
    if ControlledPlayer and ControlledPlayer.Character then
        local humanoid = ControlledPlayer.Character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid.JumpPower = state and 0 or OriginalSettings.JumpPower
        end
    end
end

local function ForceAcceptTrade()
    -- Works with most trading systems
    for _, button in pairs(game:GetService("CoreGui"):GetDescendants()) do
        if button:IsA("TextButton") and (button.Text:lower():find("accept") or button.Text:lower():find("confirm")) then
            fireclickdetector(button:FindFirstChildOfClass("ClickDetector"))
        end
    end
end

ControlBtn.MouseButton1Click:Connect(function()
    local target = FindPlayer(TargetBox.Text)
    if target then
        ControlledPlayer = target
        ControlCharacter(target.Character)
        ControlBtn.Text = "Controlling: "..target.Name
    end
end)

JumpToggle.MouseButton1Click:Connect(function()
    ToggleJump(JumpToggle.Text == "Disable Jump")
    JumpToggle.Text = JumpToggle.Text == "Disable Jump" and "Enable Jump" or "Disable Jump"
end)

AcceptToggle.MouseButton1Click:Connect(function()
    ForceAcceptTrade()
end)

-- Mobile Compatibility
UIS.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        MainFrame.Position = UDim2.new(0, input.Position.X - MainFrame.AbsoluteSize.X/2, 
        0, input.Position.Y - MainFrame.AbsoluteSize.Y/2)
    end
end)

-- Auto-Update for Character Changes
game:GetService("Players").PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(char)
        if player == ControlledPlayer then
            ControlCharacter(char)
        end
    end)
end)
